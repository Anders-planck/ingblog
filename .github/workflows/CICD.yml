name: CI/CD Pipeline

on:
  pull_request:
    branches: [ develop, master ]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_ISA_BLOG_TOKEN: ${{ secrets.VERCEL_ISA_BLOG_TOKEN }}
  VERCEL_APP_NAME: ${{ secrets.VERCEL_APP_NAME }}
  VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
  VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  lint:
    name: Lint test code
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Compose
        run: |
          cp .env.dist .env 
          echo VERCEL_ISA_BLOG_TOKEN=${{ secrets.VERCEL_ISA_BLOG_TOKEN }} >> .env
          echo VERCEL_ORG_ID=${{ secrets.VERCEL_ORG_ID }} >> .env
          echo VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROJECT_ID }} >> .env
          echo VERCEL_APP_NAME=${{ secrets.VERCEL_APP_NAME }} >> .env
          echo VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }} >> .env
          echo VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY }} >> .env
          docker compose build && docker compose up -d
          

      - name: setup environment
        run: |
          docker compose exec node /bin/bash setup.sh

      - name: Lint code
        run: docker compose exec node npm run lint

      - name: Run tests
        run: docker compose exec node npm run test

      - name: Dump docker logs on failure using different shell
        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          shell: '/bin/sh'
